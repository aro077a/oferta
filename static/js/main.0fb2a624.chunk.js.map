{"version":3,"sources":["components/schedule-settings/switcher/Switcher.jsx","components/schedule-settings/schedule/Schedule.jsx","components/schedule-settings/ScheduleSettings.jsx","App.js","reportWebVitals.js","index.js"],"names":["Switcher","handleChange","checked","id","onChange","offColor","onColor","className","height","width","borderRadius","checkedIcon","style","fontWeight","fontStyle","fontSize","lineHeight","padding","uncheckedIcon","Schedule","handleStartTimeChange","handleEndTimeChange","open","close","hour","format","defaultValue","moment","time","timeString","ScheduleSettings","useState","data","setData","startTime","setStartTime","endTime","setEndTime","useEffect","a","axios","post","token","password","response","schedule","postData","x","toString","split","map","item","idx","working","e","forEach","i","b","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0fb2a624.chunk.js","sourcesContent":["import React from 'react';\r\nimport Switch from 'react-switch';\r\nimport './switcher.scss';\r\n\r\nconst Switcher = ({ handleChange, checked, id }) => {\r\n  return (\r\n    <Switch\r\n      onChange={handleChange}\r\n      checked={checked}\r\n      offColor='#CFDBEA'\r\n      onColor='#4CDEB2'\r\n      className='react-switch'\r\n      height={36}\r\n      width={96}\r\n      id={id + ''}\r\n      borderRadius={18}\r\n      checkedIcon={\r\n        <p\r\n          style={{\r\n            fontWeight: '600',\r\n            fontStyle: 'normal',\r\n            fontSize: '18px',\r\n            lineHeight: '19.87px',\r\n            padding: '9px 44px 6px 12px',\r\n          }}\r\n        >\r\n          Mon\r\n        </p>\r\n      }\r\n      uncheckedIcon={\r\n        <p\r\n          style={{\r\n            fontWeight: '600',\r\n            fontStyle: 'normal',\r\n            fontSize: '18px',\r\n            lineHeight: '19.87px',\r\n            padding: '9px 9px 6px',\r\n          }}\r\n        >\r\n          Mon\r\n        </p>\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default Switcher;\r\n","import React from 'react';\r\nimport Switcher from '../switcher/Switcher';\r\nimport { TimePicker } from 'antd';\r\nimport moment from 'moment';\r\nimport './schedule.scss';\r\n\r\nconst Schedule = ({\r\n  handleChange,\r\n  handleStartTimeChange,\r\n  handleEndTimeChange,\r\n  checked,\r\n  id,\r\n  open,\r\n  close,\r\n  hour,\r\n}) => {\r\n  const format = 'HH:mm';\r\n  return (\r\n    <div className='schedule__container'>\r\n      {checked ? (\r\n        <div className='schedule__container__checked'>\r\n          <div className='schedule__container__checked--switcher'>\r\n            <Switcher handleChange={handleChange} checked={checked} id={id} />\r\n          </div>\r\n          <div className='schedule__container__checked__content'>\r\n            <p className='schedule__container__checked__content--info'>\r\n              Czas otwarcia\r\n            </p>\r\n            <div className='schedule__container__checked__content__time'>\r\n              <TimePicker\r\n                defaultValue={moment(open, format)}\r\n                format={format}\r\n                onChange={(time, timeString) => {\r\n                  handleStartTimeChange(timeString);\r\n                }}\r\n              />\r\n            </div>\r\n            <div className='schedule__container__checked__content--line'></div>\r\n            <p className='schedule__container__checked__content--remainTime'>\r\n              {hour} godz\r\n            </p>\r\n            <div className='schedule__container__checked__content--line'></div>\r\n            <p className='schedule__container__checked__content--info'>\r\n              Czas zamknecia\r\n            </p>\r\n            <div className='schedule__container__checked__content__time'>\r\n              <TimePicker\r\n                defaultValue={moment(close, format)}\r\n                format={format}\r\n                onChange={(time, timeString) => {\r\n                  handleEndTimeChange(timeString);\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className='schedule__container__unchecked'>\r\n          <div className='schedule__container__unchecked--switcher'>\r\n            <Switcher handleChange={handleChange} checked={checked} id={id} />\r\n          </div>\r\n          <div className='schedule__container__unchecked__empty'>\r\n            <p>Dzien volny</p>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Schedule;\r\n","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport Schedule from './schedule/Schedule';\r\nimport './scheduleSettings.scss';\r\n\r\nconst ScheduleSettings = () => {\r\n  const url = 'http://api.gastro.systems/admin/testTask';\r\n\r\n  const [data, setData] = useState([]);\r\n  const [startTime, setStartTime] = useState('9:00');\r\n  const [endTime, setEndTime] = useState('21:00');\r\n\r\n  useEffect(() => {\r\n    const postData = async () => {\r\n      const response = await axios.post(url, {\r\n        token: 'wadgu29ufan2',\r\n        password: 'testTask',\r\n      });\r\n      setData(response.data.schedule);\r\n    };\r\n\r\n    postData();\r\n  }, []);\r\n\r\n  const handleChange = (checked, e, id) => {\r\n    data.forEach((item, i) => {\r\n      item.id = i;\r\n    });\r\n\r\n    let b = data.map((item) => {\r\n      if (item.id === +id) {\r\n        return {\r\n          ...item,\r\n          working: checked,\r\n        };\r\n      } else {\r\n        return item;\r\n      }\r\n    });\r\n    setData(b);\r\n  };\r\n\r\n  const handleStartTimeChange = (timeString) => {\r\n    setStartTime(timeString);\r\n  };\r\n\r\n  const handleEndTimeChange = (timeString) => {\r\n    setEndTime(timeString);\r\n  };\r\n\r\n  const x = startTime.toString().split(':');\r\n  const c = endTime.toString().split(':');\r\n\r\n  let hour = +c[0] - +x[0];\r\n\r\n  return (\r\n    <div className='schedule__settings'>\r\n      <div className='schedule__settings__title'>\r\n        <h1>Schedule Settings</h1>\r\n      </div>\r\n      <div className='schedule__settings__container'>\r\n        {data.map((item, idx) => {\r\n          return (\r\n            <Schedule\r\n              id={idx}\r\n              key={idx}\r\n              checked={item.working}\r\n              handleChange={(checked, e, id) => handleChange(checked, e, id)}\r\n              open={item.open}\r\n              close={item.close}\r\n              handleStartTimeChange={handleStartTimeChange}\r\n              handleEndTimeChange={handleEndTimeChange}\r\n              hour={hour}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ScheduleSettings;\r\n","import ScheduleSettings from './components/schedule-settings/ScheduleSettings';\n\nconst App = () => {\n  return (\n    <div className='App'>\n      <ScheduleSettings />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}